name: Hprofile Actions 
on:
  push:
    branches:
      - main
  workflow_dispatch:

  pull_request:
    branches:
      - main
env:
  AWS_REGION: us-east-1
  # SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  # SONAR_URL: ${{ secrets.SONAR_URL }}
  # SONAR_ORGANIZATION: ${{ secrets.SONAR_ORGANIZATION }}
  # SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}
  # DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  # DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
 
jobs:

  TESTTING-CODE-QUALITY:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: cache Maven Dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
            

      - name: Run Tests with Maven
        run: mvn  test
        timeout-minutes: 10

      - name: Checkstyle
        run: mvn checkstyle:checkstyle

      - name: Install Java 11
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Setup SonarQube     
        uses: warchant/setup-sonar-scanner@v7   

      - name: SonarQube Scan
        run: sonar-scanner
             -Dsonar.host.url=${{ secrets.SONACLOUD_URL }}
             -Dsonar.login=${{ secrets.SONACLOUD_TOKEN }}
             -Dsonar.organization=${{ secrets.SONACLOUD_ORG}}
             -Dsonar.projectKey=${{ secrets.SONACLOUD_PRJ }}
             -Dsonar.sources=src/
             -Dsonar.junit.reportPaths=target/surefire-reports
             -Dsonar.java.jacoco.reportPaths=target/jacoco.exec
             -Dsonar.java.checkstyle.reportPaths=target/site/checkstyle-result.xml
             -Dsonar.java.binaries=target/classes/com/visualpathit/account

  BUILD_PUBLISH_IMAGE:
    needs: TESTTING-CODE-QUALITY
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: update application.properties files
        run: |
          sed -i "s/^jdbc.username.*$/jdbc.username\=${{ secrets.RDS_USER }}/" src/main/resources/application.properties
          sed -i "s/^jdbc.password.*$/jdbc.password\=${{ secrets.RDS_PASS }}/" src/main/resources/application.properties
          sed -i "s/db01/${{ secrets.RDS_ENDPOINT }}/" src/main/resources/application.properties
          
      - name: upload image to ECR
        uses: appleboy/docker-ecr-action@master
        with:        
          access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY_ID}}
          registry: ${{ secrets.REGISTRY }}
          cache_from: ${{ secrets.cache }}
          repo: gitapp
          region: ${{env.AWS_REGION}}
          tags: latest, ${{ github.run_number }}
          # auto_tag: true
          daemon_off: false
          dockerfile: ./Dockerfile
          context: ./
        
       
        
            


       





  
        
